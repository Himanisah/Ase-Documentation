### YamlMime:ManagedReference
items:
- uid: TestProject.ComponentsTest.AppParserTests
  commentId: T:TestProject.ComponentsTest.AppParserTests
  id: AppParserTests
  parent: TestProject.ComponentsTest
  children:
  - TestProject.ComponentsTest.AppParserTests.SetUp
  - TestProject.ComponentsTest.AppParserTests.TestParseCommand_ShouldThrowFactoryException_ForUnknownCommand
  - TestProject.ComponentsTest.AppParserTests.TestParseCommand_ShouldThrowParserException_ForUnknownVariableInAssignment
  - TestProject.ComponentsTest.AppParserTests.TestParseProgram_ShouldParseValidProgram_Correctly
  - TestProject.ComponentsTest.AppParserTests.TestParseProgram_ShouldThrowParserException_ForInvalidProgram
  langs:
  - csharp
  - vb
  name: AppParserTests
  nameWithType: AppParserTests
  fullName: TestProject.ComponentsTest.AppParserTests
  type: Class
  source:
    remote:
      path: TestProject/AppParserTests.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-Himanisah.git
    id: AppParserTests
    path: TestProject/AppParserTests.cs
    startLine: 11
  assemblies:
  - TestProject
  namespace: TestProject.ComponentsTest
  summary: Unit tests for the <code>ParserProgram</code> class to verify the functionality of its command parsing and program parsing capabilities.
  example: []
  syntax:
    content: >-
      [TestClass]

      public class AppParserTests
    content.vb: >-
      <TestClass>

      Public Class AppParserTests
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.ToString
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute.#ctor
    arguments: []
- uid: TestProject.ComponentsTest.AppParserTests.SetUp
  commentId: M:TestProject.ComponentsTest.AppParserTests.SetUp
  id: SetUp
  parent: TestProject.ComponentsTest.AppParserTests
  langs:
  - csharp
  - vb
  name: SetUp()
  nameWithType: AppParserTests.SetUp()
  fullName: TestProject.ComponentsTest.AppParserTests.SetUp()
  type: Method
  source:
    remote:
      path: TestProject/AppParserTests.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-Himanisah.git
    id: SetUp
    path: TestProject/AppParserTests.cs
    startLine: 22
  assemblies:
  - TestProject
  namespace: TestProject.ComponentsTest
  summary: Sets up the test environment by initializing real instances of dependencies for <code>ParserProgram</code>.
  example: []
  syntax:
    content: >-
      [TestInitialize]

      public void SetUp()
    content.vb: >-
      <TestInitialize>

      Public Sub SetUp()
  overload: TestProject.ComponentsTest.AppParserTests.SetUp*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute.#ctor
    arguments: []
- uid: TestProject.ComponentsTest.AppParserTests.TestParseCommand_ShouldThrowFactoryException_ForUnknownCommand
  commentId: M:TestProject.ComponentsTest.AppParserTests.TestParseCommand_ShouldThrowFactoryException_ForUnknownCommand
  id: TestParseCommand_ShouldThrowFactoryException_ForUnknownCommand
  parent: TestProject.ComponentsTest.AppParserTests
  langs:
  - csharp
  - vb
  name: TestParseCommand_ShouldThrowFactoryException_ForUnknownCommand()
  nameWithType: AppParserTests.TestParseCommand_ShouldThrowFactoryException_ForUnknownCommand()
  fullName: TestProject.ComponentsTest.AppParserTests.TestParseCommand_ShouldThrowFactoryException_ForUnknownCommand()
  type: Method
  source:
    remote:
      path: TestProject/AppParserTests.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-Himanisah.git
    id: TestParseCommand_ShouldThrowFactoryException_ForUnknownCommand
    path: TestProject/AppParserTests.cs
    startLine: 35
  assemblies:
  - TestProject
  namespace: TestProject.ComponentsTest
  summary: Tests the <code>ParseCommand</code> method to ensure it returns a valid command for known commands.
  example: []
  syntax:
    content: >-
      [TestMethod]

      [ExpectedException(typeof(FactoryException))]

      public void TestParseCommand_ShouldThrowFactoryException_ForUnknownCommand()
    content.vb: >-
      <TestMethod>

      <ExpectedException(GetType(FactoryException))>

      Public Sub TestParseCommand_ShouldThrowFactoryException_ForUnknownCommand()
  overload: TestProject.ComponentsTest.AppParserTests.TestParseCommand_ShouldThrowFactoryException_ForUnknownCommand*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: BOOSE.FactoryException
- uid: TestProject.ComponentsTest.AppParserTests.TestParseProgram_ShouldParseValidProgram_Correctly
  commentId: M:TestProject.ComponentsTest.AppParserTests.TestParseProgram_ShouldParseValidProgram_Correctly
  id: TestParseProgram_ShouldParseValidProgram_Correctly
  parent: TestProject.ComponentsTest.AppParserTests
  langs:
  - csharp
  - vb
  name: TestParseProgram_ShouldParseValidProgram_Correctly()
  nameWithType: AppParserTests.TestParseProgram_ShouldParseValidProgram_Correctly()
  fullName: TestProject.ComponentsTest.AppParserTests.TestParseProgram_ShouldParseValidProgram_Correctly()
  type: Method
  source:
    remote:
      path: TestProject/AppParserTests.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-Himanisah.git
    id: TestParseProgram_ShouldParseValidProgram_Correctly
    path: TestProject/AppParserTests.cs
    startLine: 51
  assemblies:
  - TestProject
  namespace: TestProject.ComponentsTest
  summary: Tests the <code>ParseProgram</code> method to ensure it parses valid programs correctly.
  example: []
  syntax:
    content: >-
      [TestMethod]

      [ExpectedException(typeof(ParserException))]

      public void TestParseProgram_ShouldParseValidProgram_Correctly()
    content.vb: >-
      <TestMethod>

      <ExpectedException(GetType(ParserException))>

      Public Sub TestParseProgram_ShouldParseValidProgram_Correctly()
  overload: TestProject.ComponentsTest.AppParserTests.TestParseProgram_ShouldParseValidProgram_Correctly*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: BOOSE.ParserException
- uid: TestProject.ComponentsTest.AppParserTests.TestParseProgram_ShouldThrowParserException_ForInvalidProgram
  commentId: M:TestProject.ComponentsTest.AppParserTests.TestParseProgram_ShouldThrowParserException_ForInvalidProgram
  id: TestParseProgram_ShouldThrowParserException_ForInvalidProgram
  parent: TestProject.ComponentsTest.AppParserTests
  langs:
  - csharp
  - vb
  name: TestParseProgram_ShouldThrowParserException_ForInvalidProgram()
  nameWithType: AppParserTests.TestParseProgram_ShouldThrowParserException_ForInvalidProgram()
  fullName: TestProject.ComponentsTest.AppParserTests.TestParseProgram_ShouldThrowParserException_ForInvalidProgram()
  type: Method
  source:
    remote:
      path: TestProject/AppParserTests.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-Himanisah.git
    id: TestParseProgram_ShouldThrowParserException_ForInvalidProgram
    path: TestProject/AppParserTests.cs
    startLine: 69
  assemblies:
  - TestProject
  namespace: TestProject.ComponentsTest
  summary: Tests the <code>ParseProgram</code> method to ensure it throws a <code>ParserException</code> for invalid program input.
  example: []
  syntax:
    content: >-
      [TestMethod]

      [ExpectedException(typeof(ParserException))]

      public void TestParseProgram_ShouldThrowParserException_ForInvalidProgram()
    content.vb: >-
      <TestMethod>

      <ExpectedException(GetType(ParserException))>

      Public Sub TestParseProgram_ShouldThrowParserException_ForInvalidProgram()
  overload: TestProject.ComponentsTest.AppParserTests.TestParseProgram_ShouldThrowParserException_ForInvalidProgram*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: BOOSE.ParserException
- uid: TestProject.ComponentsTest.AppParserTests.TestParseCommand_ShouldThrowParserException_ForUnknownVariableInAssignment
  commentId: M:TestProject.ComponentsTest.AppParserTests.TestParseCommand_ShouldThrowParserException_ForUnknownVariableInAssignment
  id: TestParseCommand_ShouldThrowParserException_ForUnknownVariableInAssignment
  parent: TestProject.ComponentsTest.AppParserTests
  langs:
  - csharp
  - vb
  name: TestParseCommand_ShouldThrowParserException_ForUnknownVariableInAssignment()
  nameWithType: AppParserTests.TestParseCommand_ShouldThrowParserException_ForUnknownVariableInAssignment()
  fullName: TestProject.ComponentsTest.AppParserTests.TestParseCommand_ShouldThrowParserException_ForUnknownVariableInAssignment()
  type: Method
  source:
    remote:
      path: TestProject/AppParserTests.cs
      branch: main
      repo: https://github.com/ASE-Classroom/ase-demo-assignment-Himanisah.git
    id: TestParseCommand_ShouldThrowParserException_ForUnknownVariableInAssignment
    path: TestProject/AppParserTests.cs
    startLine: 85
  assemblies:
  - TestProject
  namespace: TestProject.ComponentsTest
  summary: Tests the <code>ParseCommand</code> method to ensure it throws a <code>ParserException</code> for unknown variables in assignments.
  example: []
  syntax:
    content: >-
      [TestMethod]

      [ExpectedException(typeof(ParserException))]

      public void TestParseCommand_ShouldThrowParserException_ForUnknownVariableInAssignment()
    content.vb: >-
      <TestMethod>

      <ExpectedException(GetType(ParserException))>

      Public Sub TestParseCommand_ShouldThrowParserException_ForUnknownVariableInAssignment()
  overload: TestProject.ComponentsTest.AppParserTests.TestParseCommand_ShouldThrowParserException_ForUnknownVariableInAssignment*
  attributes:
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute.#ctor
    arguments: []
  - type: Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute
    ctor: Microsoft.VisualStudio.TestTools.UnitTesting.ExpectedExceptionAttribute.#ctor(System.Type)
    arguments:
    - type: System.Type
      value: BOOSE.ParserException
references:
- uid: TestProject.ComponentsTest
  commentId: N:TestProject.ComponentsTest
  href: TestProject.html
  name: TestProject.ComponentsTest
  nameWithType: TestProject.ComponentsTest
  fullName: TestProject.ComponentsTest
  spec.csharp:
  - uid: TestProject
    name: TestProject
    href: TestProject.html
  - name: .
  - uid: TestProject.ComponentsTest
    name: ComponentsTest
    href: TestProject.ComponentsTest.html
  spec.vb:
  - uid: TestProject
    name: TestProject
    href: TestProject.html
  - name: .
  - uid: TestProject.ComponentsTest
    name: ComponentsTest
    href: TestProject.ComponentsTest.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: TestProject.ComponentsTest.AppParserTests.SetUp*
  commentId: Overload:TestProject.ComponentsTest.AppParserTests.SetUp
  href: TestProject.ComponentsTest.AppParserTests.html#TestProject_ComponentsTest_AppParserTests_SetUp
  name: SetUp
  nameWithType: AppParserTests.SetUp
  fullName: TestProject.ComponentsTest.AppParserTests.SetUp
- uid: TestProject.ComponentsTest.AppParserTests.TestParseCommand_ShouldThrowFactoryException_ForUnknownCommand*
  commentId: Overload:TestProject.ComponentsTest.AppParserTests.TestParseCommand_ShouldThrowFactoryException_ForUnknownCommand
  href: TestProject.ComponentsTest.AppParserTests.html#TestProject_ComponentsTest_AppParserTests_TestParseCommand_ShouldThrowFactoryException_ForUnknownCommand
  name: TestParseCommand_ShouldThrowFactoryException_ForUnknownCommand
  nameWithType: AppParserTests.TestParseCommand_ShouldThrowFactoryException_ForUnknownCommand
  fullName: TestProject.ComponentsTest.AppParserTests.TestParseCommand_ShouldThrowFactoryException_ForUnknownCommand
- uid: TestProject.ComponentsTest.AppParserTests.TestParseProgram_ShouldParseValidProgram_Correctly*
  commentId: Overload:TestProject.ComponentsTest.AppParserTests.TestParseProgram_ShouldParseValidProgram_Correctly
  href: TestProject.ComponentsTest.AppParserTests.html#TestProject_ComponentsTest_AppParserTests_TestParseProgram_ShouldParseValidProgram_Correctly
  name: TestParseProgram_ShouldParseValidProgram_Correctly
  nameWithType: AppParserTests.TestParseProgram_ShouldParseValidProgram_Correctly
  fullName: TestProject.ComponentsTest.AppParserTests.TestParseProgram_ShouldParseValidProgram_Correctly
- uid: TestProject.ComponentsTest.AppParserTests.TestParseProgram_ShouldThrowParserException_ForInvalidProgram*
  commentId: Overload:TestProject.ComponentsTest.AppParserTests.TestParseProgram_ShouldThrowParserException_ForInvalidProgram
  href: TestProject.ComponentsTest.AppParserTests.html#TestProject_ComponentsTest_AppParserTests_TestParseProgram_ShouldThrowParserException_ForInvalidProgram
  name: TestParseProgram_ShouldThrowParserException_ForInvalidProgram
  nameWithType: AppParserTests.TestParseProgram_ShouldThrowParserException_ForInvalidProgram
  fullName: TestProject.ComponentsTest.AppParserTests.TestParseProgram_ShouldThrowParserException_ForInvalidProgram
- uid: TestProject.ComponentsTest.AppParserTests.TestParseCommand_ShouldThrowParserException_ForUnknownVariableInAssignment*
  commentId: Overload:TestProject.ComponentsTest.AppParserTests.TestParseCommand_ShouldThrowParserException_ForUnknownVariableInAssignment
  href: TestProject.ComponentsTest.AppParserTests.html#TestProject_ComponentsTest_AppParserTests_TestParseCommand_ShouldThrowParserException_ForUnknownVariableInAssignment
  name: TestParseCommand_ShouldThrowParserException_ForUnknownVariableInAssignment
  nameWithType: AppParserTests.TestParseCommand_ShouldThrowParserException_ForUnknownVariableInAssignment
  fullName: TestProject.ComponentsTest.AppParserTests.TestParseCommand_ShouldThrowParserException_ForUnknownVariableInAssignment
